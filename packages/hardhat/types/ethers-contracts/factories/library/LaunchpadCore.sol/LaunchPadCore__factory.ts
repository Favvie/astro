/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../../common.js"
  import type { LaunchPadCore, LaunchPadCoreInterface } from "../../../library/LaunchpadCore.sol/LaunchPadCore.js";

  const _abi = [
  {
    "inputs": [],
    "name": "MAX_RESERVE_RATIO",
    "outputs": [
      {
        "internalType": "uint32",
        "name": "",
        "type": "uint32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x608080604052346018576072908161001d823930815050f35b5f80fdfe60808060405260043610156011575f80fd5b5f3560e01c631190016c146023575f80fd5b5f36600319011260385780620f424060209252f35b5f80fdfea26469706673582212200e5bb10747fba6e4b620e879a20734df18a4184104909ce905342b193eaf855664736f6c63430008140033";

  
      type LaunchPadCoreConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: LaunchPadCoreConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class LaunchPadCore__factory extends ContractFactory {
    
      constructor(...args: LaunchPadCoreConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<LaunchPadCore & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): LaunchPadCore__factory {
      return super.connect(runner) as LaunchPadCore__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): LaunchPadCoreInterface {
      return new Interface(_abi) as LaunchPadCoreInterface;
    }
    
    override attach(address: string | Addressable): LaunchPadCore {
      return super.attach(address) as LaunchPadCore;
    }
  static connect(address: string, runner?: ContractRunner | null): LaunchPadCore {
      return new Contract(address, _abi, runner) as unknown as LaunchPadCore;
    }
  }

  
  
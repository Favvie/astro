/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../../../common.js"
  import type { PowerLib, PowerLibInterface } from "../../../library/Power.sol/PowerLib.js";

  const _abi = [
  {
    "inputs": [],
    "name": "VERSION",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  const _bytecode = "0x6080806040523460175760ce9081601c823930815050f35b5f80fdfe60806004361015600d575f80fd5b5f3560e01c63ffa1ad7414601f575f80fd5b5f366003190112609457604081016001600160401b03811182821017608057604052600381526040602082019162302e3360e81b83528151928391602083525180918160208501528484015e5f828201840152601f01601f19168101030190f35b634e487b7160e01b5f52604160045260245ffd5b5f80fdfea2646970667358221220fe8114936f80797ba19c671145769375ca0cee6e6121edfa5acc6a8c5ae3a24264736f6c634300081c0033";

  
      type PowerLibConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: PowerLibConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class PowerLib__factory extends ContractFactory {
    
      constructor(...args: PowerLibConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(overrides || {});
    };
    override deploy(overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(overrides || {}) as Promise<PowerLib & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): PowerLib__factory {
      return super.connect(runner) as PowerLib__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): PowerLibInterface {
      return new Interface(_abi) as PowerLibInterface;
    }
    
    override attach(address: string | Addressable): PowerLib {
      return super.attach(address) as PowerLib;
    }
  static connect(address: string, runner?: ContractRunner | null): PowerLib {
      return new Contract(address, _abi, runner) as unknown as PowerLib;
    }
  }

  
  
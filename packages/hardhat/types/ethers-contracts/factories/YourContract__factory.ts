/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type { Addressable } from "ethers";
import { Contract, ContractFactory, ContractTransactionResponse, Interface } from "ethers"
import type { Signer, AddressLike, ContractDeployTransaction, ContractRunner } from "ethers"
import type { NonPayableOverrides } from "../common.js"
  import type { YourContract, YourContractInterface } from "../YourContract.js";

  const _abi = [
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "_owner",
        "type": "address"
      }
    ],
    "stateMutability": "nonpayable",
    "type": "constructor"
  },
  {
    "anonymous": false,
    "inputs": [
      {
        "indexed": true,
        "internalType": "address",
        "name": "greetingSetter",
        "type": "address"
      },
      {
        "indexed": false,
        "internalType": "string",
        "name": "newGreeting",
        "type": "string"
      },
      {
        "indexed": false,
        "internalType": "bool",
        "name": "premium",
        "type": "bool"
      },
      {
        "indexed": false,
        "internalType": "uint256",
        "name": "value",
        "type": "uint256"
      }
    ],
    "name": "GreetingChange",
    "type": "event"
  },
  {
    "inputs": [],
    "name": "greeting",
    "outputs": [
      {
        "internalType": "string",
        "name": "",
        "type": "string"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "owner",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "premium",
    "outputs": [
      {
        "internalType": "bool",
        "name": "",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "string",
        "name": "_newGreeting",
        "type": "string"
      }
    ],
    "name": "setGreeting",
    "outputs": [],
    "stateMutability": "payable",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "totalCounter",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "name": "userGreetingCounter",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "withdraw",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
  },
  {
    "stateMutability": "payable",
    "type": "receive"
  }
] as const;

  const _bytecode = "0x60a03461012b57601f6107fb38819003918201601f19168301916001600160401b0383118484101761012f5780849260209460405283398101031261012b57516001600160a01b038116810361012b575f54600181811c91168015610121575b602082101461010d57601f81116100c6575b507f4275696c64696e6720556e73746f707061626c652041707073212121000000385f9081556001805460ff191690556002556080526040516106b7908161014482396080518181816104ac01526104ed0152f35b5f8052601f0160051c7f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563908101905b8181106101025750610071565b5f81556001016100f5565b634e487b7160e01b5f52602260045260245ffd5b90607f169061005f565b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe608080604052600436101561001c575b50361561001a575f80fd5b005b5f3560e01c9081633ccfd60b146104db575080638da5cb5b1461049757806397feba9d1461047a578063a4136862146101a3578063cea49c3c14610167578063e0a73a93146101455763ef690cc014610075575f61000f565b34610141575f366003190112610141576040515f5f5461009481610605565b808452906001811690811561011d57506001146100d4575b6100d0836100bc818503826105c7565b60405191829160208352602083019061063d565b0390f35b5f8080525f5160206106625f395f51905f52939250905b808210610103575090915081016020016100bc6100ac565b9192600181602092548385880101520191019092916100eb565b60ff191660208086019190915291151560051b840190910191506100bc90506100ac565b5f80fd5b34610141575f36600319011261014157602060ff600154166040519015158152f35b34610141576020366003190112610141576004356001600160a01b03811690819003610141575f526003602052602060405f2054604051908152f35b6020366003190112610141576004356001600160401b03811161014157366023820112156101415780600401356101d9816105ea565b916101e760405193846105c7565b818352366024838301011161014157815f9260246020930183860137830101525f806040516102176060826105c7565b602181527f53657474696e67206e6577206772656574696e6720272573272066726f6d20256020820152607360f81b604082015260405161029e8161028a61027860208301956395ed019560e01b875260606024850152608484019061063d565b8281036023190160448401528861063d565b33606483015203601f1981018352826105c7565b51906a636f6e736f6c652e6c6f675afa5080516001600160401b038111610466576102c95f54610605565b601f8111610417575b50806020601f82116001146103b6575f916103ab575b508160011b915f199060031b1c1916175f555b6002546001810180911161039757600255335f52600360205260405f2080549060018201809211610397575534158015917f94cbd7e04dca26a7667654f6448b2ca0a40fec602118dc5fd8c82b9cf3c645ad9161038857600160ff19815416176001555b6103746040519160608352606083019061063d565b9260208201523460408201528033930390a2005b60ff196001541660015561035f565b634e487b7160e01b5f52601160045260245ffd5b9050820151836102e8565b5f8080528181209250601f198416905b8181106103ff575090836001949392106103e7575b5050811b015f556102fb565b8401515f1960f88460031b161c1916905583806103db565b919260206001819286890151815501940192016103c6565b5f80525f5160206106625f395f51905f52601f830160051c8101916020841061045c575b601f0160051c01905b81811061045157506102d2565b5f8155600101610444565b909150819061043b565b634e487b7160e01b5f52604160045260245ffd5b34610141575f366003190112610141576020600254604051908152f35b34610141575f366003190112610141576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b34610141575f366003190112610141577f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382163303610595575f80808047865af13d15610590573d610535816105ea565b9061054360405192836105c7565b81525f60203d92013e5b1561055457005b60405162461bcd60e51b81526020600482015260146024820152732330b4b632b2103a379039b2b7321022ba3432b960611b6044820152606490fd5b61054d565b62461bcd60e51b815260206004820152600d60248201526c2737ba103a34329027bbb732b960991b6044820152606490fd5b601f909101601f19168101906001600160401b0382119082101761046657604052565b6001600160401b03811161046657601f01601f191660200190565b90600182811c92168015610633575b602083101461061f57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610614565b805180835260209291819084018484015e5f828201840152601f01601f191601019056fe290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563a2646970667358221220ca5889f5c8f5c2b3c08bc92d613114167cbe51a5b29c78082f8b987f09c45c0b64736f6c634300081c0033";

  
      type YourContractConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

      const isSuperArgs = (xs: YourContractConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
        xs.length > 1
    

  export class YourContract__factory extends ContractFactory {
    
      constructor(...args: YourContractConstructorParams) {
        if (isSuperArgs(args)) {
          super(...args);
        } else {
          super(_abi, _bytecode, args[0]);
        }
        
      }
    
    override getDeployTransaction(_owner: AddressLike, overrides?: NonPayableOverrides & { from?: string }): Promise<ContractDeployTransaction> {
      return super.getDeployTransaction(_owner, overrides || {});
    };
    override deploy(_owner: AddressLike, overrides?: NonPayableOverrides & { from?: string }) {
      return super.deploy(_owner, overrides || {}) as Promise<YourContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }>;
    }
    override connect(runner: ContractRunner | null): YourContract__factory {
      return super.connect(runner) as YourContract__factory;
    }
    
    
    static readonly bytecode = _bytecode;
    static readonly abi = _abi;
    static createInterface(): YourContractInterface {
      return new Interface(_abi) as YourContractInterface;
    }
    
    override attach(address: string | Addressable): YourContract {
      return super.attach(address) as YourContract;
    }
  static connect(address: string, runner?: ContractRunner | null): YourContract {
      return new Contract(address, _abi, runner) as unknown as YourContract;
    }
  }

  
  
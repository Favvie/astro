/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

  import { Contract, Interface, type ContractRunner } from "ethers";
  import type { ILaunchpad, ILaunchpadInterface } from "../../CampaignTokenStaking.sol/ILaunchpad.js";

  const _abi = [
  {
    "inputs": [],
    "name": "campaignCount",
    "outputs": [
      {
        "internalType": "uint32",
        "name": "",
        "type": "uint32"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "campaignId",
        "type": "uint256"
      }
    ],
    "name": "campaigns",
    "outputs": [
      {
        "internalType": "address",
        "name": "creator",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "token",
        "type": "address"
      },
      {
        "internalType": "address",
        "name": "uniswapPair",
        "type": "address"
      },
      {
        "internalType": "uint128",
        "name": "targetAmount",
        "type": "uint128"
      },
      {
        "internalType": "uint128",
        "name": "amountRaised",
        "type": "uint128"
      },
      {
        "internalType": "uint64",
        "name": "deadline",
        "type": "uint64"
      },
      {
        "internalType": "uint32",
        "name": "reserveRatio",
        "type": "uint32"
      },
      {
        "internalType": "uint32",
        "name": "blockNumberCreated",
        "type": "uint32"
      },
      {
        "internalType": "bool",
        "name": "isActive",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "isFundingComplete",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "isCancelled",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "isPromoted",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  }
] as const;

  export class ILaunchpad__factory {
    static readonly abi = _abi;
    static createInterface(): ILaunchpadInterface {
      return new Interface(_abi) as ILaunchpadInterface;
    }
    static connect(address: string, runner?: ContractRunner | null): ILaunchpad {
      return new Contract(address, _abi, runner) as unknown as ILaunchpad;
    }
  }
  